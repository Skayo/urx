(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{102:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return O}));var a=n(0),s=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function b(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var p=s.a.createContext({}),l=function(e){var t=s.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):b(b({},t),e)),n},m=function(e){var t=l(e.components);return s.a.createElement(p.Provider,{value:t},e.children)},o={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},u=s.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=l(n),u=a,O=m["".concat(c,".").concat(u)]||m[u]||o[u]||r;return n?s.a.createElement(O,b(b({ref:t},p),{},{components:n})):s.a.createElement(O,b({ref:t},p))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,c=new Array(r);c[0]=u;var b={};for(var i in t)hasOwnProperty.call(t,i)&&(b[i]=t[i]);b.originalType=e,b.mdxType="string"==typeof e?e:a,c[1]=b;for(var p=2;p<r;p++)c[p]=n[p];return s.a.createElement.apply(null,c)}return s.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},78:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return b})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return l}));var a=n(2),s=n(6),r=(n(0),n(102)),c={id:"_urx_src_system_",title:"urx/src/system",sidebar_label:"urx/src/system"},b={unversionedId:"modules/_urx_src_system_",id:"modules/_urx_src_system_",isDocsHomePage:!1,title:"urx/src/system",description:'Documentation \u203a "urx/src/system"',source:"@site/docs/modules/_urx_src_system_.md",permalink:"/docs/modules/_urx_src_system_",editUrl:"https://github.com/petyosi/urx/edit/master/packages/docs/docs/docs/modules/_urx_src_system_.md",sidebar_label:"urx/src/system",sidebar:"typedoc",previous:{title:"urx/src/streams",permalink:"/docs/modules/_urx_src_streams_"},next:{title:"urx/src/transformers",permalink:"/docs/modules/_urx_src_transformers_"}},i=[{value:"Index",id:"index",children:[{value:"Interfaces",id:"interfaces",children:[]},{value:"Type aliases",id:"type-aliases",children:[]},{value:"Functions",id:"functions",children:[]}]},{value:"Type aliases",id:"type-aliases-1",children:[{value:"SystemConstructor",id:"systemconstructor",children:[]}]},{value:"Functions",id:"functions-1",children:[{value:"<code>Const</code> id",id:"const-id",children:[]},{value:"init",id:"init",children:[]},{value:"system",id:"system",children:[]}]}],p={rightToc:i};function l(e){var t=e.components,n=Object(s.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/index"}),"Documentation")," \u203a ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/modules/_urx_src_system_"}),'"urx/src/system"')),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/modules/_urx_src_system_#system"}),"system")," is a construction utility to define and initialize sets of connected streams.\nSystems can list other systems as their dependencies, and optionally act as singletons in the dependency tree."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"@import { subscribe, publish, system, init, tup, connect, map, pipe } from 'urx'\n\n// a simple system with two streams\nconst sys1 = system(() => {\n const a = stream<number>()\n const b = stream<number>()\n\n connect(pipe(a, map(value => value * 2)), b)\n return { a, b }\n})\n\n// a second system which depends on the streams from the first one\nconst sys2 = system(([ {a, b} ]) => {\n const c = stream<number>()\n connect(pipe(b, map(value => value * 2)), c)\n // re-export the `a` stream, keep `b` internal\n return { a, c }\n}, tup(sys1))\n\n// init will recursively initialize sys2 dependencies, in this case sys1\nconst { a, c } = init(sys2)\nsubscribe(c, c => console.log(`Value multiplied by 4`, c))\npublish(a, 2)\n")),Object(r.b)("h2",{id:"index"},"Index"),Object(r.b)("h3",{id:"interfaces"},"Interfaces"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/interfaces/_urx_src_system_.system"}),"System")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/interfaces/_urx_src_system_.systemspec"}),"SystemSpec"))),Object(r.b)("h3",{id:"type-aliases"},"Type aliases"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/modules/_urx_src_system_#systemconstructor"}),"SystemConstructor"))),Object(r.b)("h3",{id:"functions"},"Functions"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/modules/_urx_src_system_#const-id"}),"id")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/modules/_urx_src_system_#init"}),"init")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/modules/_urx_src_system_#system"}),"system"))),Object(r.b)("h2",{id:"type-aliases-1"},"Type aliases"),Object(r.b)("h3",{id:"systemconstructor"},"SystemConstructor"),Object(r.b)("p",null,"\u01ac ",Object(r.b)("strong",{parentName:"p"},"SystemConstructor"),": ",Object(r.b)("em",{parentName:"p"},"function")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/petyosi/urx/blob/94685e5/packages/urx/src/system.ts#L91"}),"urx/src/system.ts:91"))),Object(r.b)("p",null,"The system constructor is a function which initializes and connects streams and returns them as a ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/interfaces/_urx_src_system_.system"}),"System"),".\nIf the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/modules/_urx_src_system_#system"}),"system")," call specifies system dependencies, the constructor receives the dependencies as an array argument."),Object(r.b)("h4",{id:"type-declaration"},"Type declaration:"),Object(r.b)("p",null,"\u25b8 (",Object(r.b)("inlineCode",{parentName:"p"},"dependencies"),": SpecResults\u2039D\u203a): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"em"},{href:"/docs/interfaces/_urx_src_system_.system"}),"System"))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"dependencies")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"SpecResults\u2039D\u203a")))),Object(r.b)("h2",{id:"functions-1"},"Functions"),Object(r.b)("h3",{id:"const-id"},Object(r.b)("inlineCode",{parentName:"h3"},"Const")," id"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"id"),"(): ",Object(r.b)("em",{parentName:"p"},"string")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/petyosi/urx/blob/94685e5/packages/urx/src/system.ts#L131"}),"urx/src/system.ts:131"))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"string")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"init"},"init"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"init"),"\u2039",Object(r.b)("strong",{parentName:"p"},"SS"),"\u203a(",Object(r.b)("inlineCode",{parentName:"p"},"systemSpec"),": SS): ",Object(r.b)("em",{parentName:"p"},"SR\u2039SS\u203a")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/petyosi/urx/blob/94685e5/packages/urx/src/system.ts#L138"}),"urx/src/system.ts:138"))),Object(r.b)("p",null,"Initializes a ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/interfaces/_urx_src_system_.systemspec"}),"SystemSpec")," by recursively initializing its dependencies."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Type parameters:")),Object(r.b)("p",null,"\u25aa ",Object(r.b)("strong",{parentName:"p"},"SS"),": ",Object(r.b)("em",{parentName:"p"},"AnySystemSpec")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"systemSpec")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"SS"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"the system spec to initialize.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"SR\u2039SS\u203a")),Object(r.b)("p",null,"the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/interfaces/_urx_src_system_.system"}),"System")," constructed by the spec constructor."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"system"},"system"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"system"),"\u2039",Object(r.b)("strong",{parentName:"p"},"F"),", ",Object(r.b)("strong",{parentName:"p"},"D"),"\u203a(",Object(r.b)("inlineCode",{parentName:"p"},"constructor"),": F, ",Object(r.b)("inlineCode",{parentName:"p"},"dependencies"),": D, ",Object(r.b)("inlineCode",{parentName:"p"},"__namedParameters"),": object): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"em"},{href:"/docs/interfaces/_urx_src_system_.systemspec"}),"SystemSpec"),"\u2039D, F\u203a")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/petyosi/urx/blob/94685e5/packages/urx/src/system.ts#L118"}),"urx/src/system.ts:118"))),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"system")," defines a specification of a system - its constructor, dependencies and if it should act as a singleton in a system dependency tree.\nWhen called, system returns a ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/interfaces/_urx_src_system_.systemspec"}),"SystemSpec"),", which is then initialized along with its dependencies by passing it to ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/modules/_urx_src_system_#init"}),"init"),"."),Object(r.b)("p",null,"By default, systems will be initialized only once if encountered multiple times in the dependency tree.\nIn the below dependency system tree, systems ",Object(r.b)("inlineCode",{parentName:"p"},"b")," and ",Object(r.b)("inlineCode",{parentName:"p"},"c")," will receive the same stream instances from system ",Object(r.b)("inlineCode",{parentName:"p"},"a")," when system ",Object(r.b)("inlineCode",{parentName:"p"},"d")," is initialized."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-txt"}),"  a\n / \\\nb   c\n \\ /\n  d\n")),Object(r.b)("p",null,"If system ",Object(r.b)("inlineCode",{parentName:"p"},"a")," gets ",Object(r.b)("inlineCode",{parentName:"p"},"{singleton: false}")," as last argument, two separate instances will be created."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Type parameters:")),Object(r.b)("p",null,"\u25aa ",Object(r.b)("strong",{parentName:"p"},"F"),": ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"em"},{href:"/docs/modules/_urx_src_system_#systemconstructor"}),"SystemConstructor"),"\u2039D\u203a")),Object(r.b)("p",null,"\u25aa ",Object(r.b)("strong",{parentName:"p"},"D"),": ",Object(r.b)("em",{parentName:"p"},"SystemSpecs")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("p",null,"\u25aa ",Object(r.b)("strong",{parentName:"p"},"constructor"),": ",Object(r.b)("em",{parentName:"p"},"F")),Object(r.b)("p",null,"the system constructor function. Initialize and connect the streams in its body."),Object(r.b)("p",null,"\u25aa",Object(r.b)("inlineCode",{parentName:"p"},"Default value"),"  ",Object(r.b)("strong",{parentName:"p"},"dependencies"),": ",Object(r.b)("em",{parentName:"p"},"D"),"= ([] as unknown) as D"),Object(r.b)("p",null,"the system dependencies, which the constructor will receive as arguments.\nUse the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/modules/_urx_src_utils_#tup"}),"tup")," utility ",Object(r.b)("strong",{parentName:"p"},"For TypeScript type inference to work correctly"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"const sys3 = system(() => { ... }, tup(sys2, sys1))\n")),Object(r.b)("p",null,"\u25aa",Object(r.b)("inlineCode",{parentName:"p"},"Default value"),"  ",Object(r.b)("strong",{parentName:"p"},"__namedParameters"),": ",Object(r.b)("em",{parentName:"p"},"object"),"= { singleton: true }"),Object(r.b)("p",null,"Options"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"singleton")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"boolean"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"should the system act as a singleton in other system dependency tree.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"em"},{href:"/docs/interfaces/_urx_src_system_.systemspec"}),"SystemSpec"),"\u2039D, F\u203a")))}l.isMDXComponent=!0}}]);