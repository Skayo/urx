(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{103:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return b}));var r=n(0),i=n.n(r);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=i.a.createContext({}),l=function(e){var t=i.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return i.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,a=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),d=r,b=u["".concat(a,".").concat(d)]||u[d]||m[d]||s;return n?i.a.createElement(b,o(o({ref:t},p),{},{components:n})):i.a.createElement(b,o({ref:t},p))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,a=new Array(s);a[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,a[1]=o;for(var p=2;p<s;p++)a[p]=n[p];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},54:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return l}));var r=n(2),i=n(6),s=(n(0),n(103)),a={id:"thinking-in-systems",title:"Thinking in Systems",sidebar_label:"Thinking in Systems"},o={unversionedId:"thinking-in-systems",id:"thinking-in-systems",isDocsHomePage:!1,title:"Thinking in Systems",description:"urx systems are a stateful data-processing machines which accept input through input streams,",source:"@site/docs/thinking-in-systems.md",permalink:"/docs/thinking-in-systems",editUrl:"https://github.com/petyosi/urx/edit/master/packages/docs/docs/docs/thinking-in-systems.md",sidebar_label:"Thinking in Systems",sidebar:"typedoc",previous:{title:"urx by example",permalink:"/docs/urx-by-example"},next:{title:"react-urx/src/index",permalink:"/docs/modules/_react_urx_src_index_"}},c=[{value:"System Depots",id:"system-depots",children:[]},{value:"Systems in the UI Component World",id:"systems-in-the-ui-component-world",children:[]}],p={rightToc:c};function l(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(s.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",{className:"lead"},"urx systems are a stateful ",Object(s.b)("strong",null,"data-processing")," machines which accept input through ",Object(s.b)("strong",null,"input streams"),", init and maintain state in ",Object(s.b)("strong",null,"depots")," and, in certain conditions, emit values to subscriptions through ",Object(s.b)("strong",null,"output streams"),"."),Object(s.b)("h2",{id:"system-depots"},"System Depots"),Object(s.b)("p",null,"The first, and probably the most critical part to understand are ",Object(s.b)("strong",{parentName:"p"},"the depots")," -\nmostly because they often exist in a relatively implicit form.\nUnlike other state management paradigms, the depots are not kept in a single data structure.\nInsted, depots are defined and maintained as stateful streams, stateful transfomers\nlike ",Object(s.b)("inlineCode",{parentName:"p"},"combineLatest")," or stateful operators like ",Object(s.b)("inlineCode",{parentName:"p"},"withLatestFrom")," or ",Object(s.b)("inlineCode",{parentName:"p"},"scan"),"."),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Depots persist values over time"),".\nIf it was not for them, the system had to re-receive\nits entire input state simultaneously in order to calculate the values for its output stream. "),Object(s.b)("p",null,"In the "),Object(s.b)("p",null,"Of course, strictly speaking, it is possible to implement a pure, stateless system as a form of a complex map/reduce construct. urx would not mind that ;)."),Object(s.b)("h2",{id:"systems-in-the-ui-component-world"},"Systems in the UI Component World"))}l.isMDXComponent=!0}}]);