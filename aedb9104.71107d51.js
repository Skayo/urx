(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{103:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return y}));var n=r(0),s=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var u=s.a.createContext({}),m=function(e){var t=s.a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=m(e.components);return s.a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},b=s.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),l=m(r),b=n,y=l["".concat(c,".").concat(b)]||l[b]||p[b]||a;return r?s.a.createElement(y,o(o({ref:t},u),{},{components:r})):s.a.createElement(y,o({ref:t},u))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,c=new Array(a);c[0]=b;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:n,c[1]=o;for(var u=2;u<a;u++)c[u]=r[u];return s.a.createElement.apply(null,c)}return s.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},82:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return o})),r.d(t,"rightToc",(function(){return i})),r.d(t,"default",(function(){return m}));var n=r(2),s=r(6),a=(r(0),r(103)),c={id:"_urx_src_system_.system",title:"System",sidebar_label:"System"},o={unversionedId:"interfaces/_urx_src_system_.system",id:"interfaces/_urx_src_system_.system",isDocsHomePage:!1,title:"System",description:'Documentation \u203a "urx/src/system" \u203a System',source:"@site/docs/interfaces/_urx_src_system_.system.md",permalink:"/docs/interfaces/_urx_src_system_.system",editUrl:"https://github.com/petyosi/urx/edit/master/packages/docs/docs/docs/interfaces/_urx_src_system_.system.md",sidebar_label:"System",sidebar:"typedoc",previous:{title:"Operator",permalink:"/docs/interfaces/_urx_src_operators_.operator"},next:{title:"SystemSpec",permalink:"/docs/interfaces/_urx_src_system_.systemspec"}},i=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Indexable",id:"indexable",children:[]}],u={rightToc:i};function m(e){var t=e.components,r=Object(s.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},u,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/index"}),"Documentation")," \u203a ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/modules/_urx_src_system_"}),'"urx/src/system"')," \u203a ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/interfaces/_urx_src_system_.system"}),"System")),Object(a.b)("p",null,"Systems are a dictionaries of streams. a ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/modules/_urx_src_system_#systemconstructor"}),"SystemConstructor")," should return a System."),Object(a.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"System"))),Object(a.b)("h2",{id:"indexable"},"Indexable"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"["," ",Object(a.b)("strong",{parentName:"li"},"key"),": ",Object(a.b)("em",{parentName:"li"},"string"),"]",": ",Object(a.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/interfaces/_urx_src_actions_.emitter"}),"Emitter"),"\u2039any\u203a")),Object(a.b)("p",null,"Systems are a dictionaries of streams. a ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/modules/_urx_src_system_#systemconstructor"}),"SystemConstructor")," should return a System."))}m.isMDXComponent=!0}}]);